version: 2.1

orbs:
  orb-tools: circleci/orb-tools@2.0.0

jobs:
  validate:
    docker:
      - image: cimg/node:lts
    steps:
      - test-project:
          project: drupal-project-k8s
          job_count: 2
      - test-project:
          project: frontend-project-k8s
          job_count: 2
      - test-project:
          project: simple-project-k8s
          job_count: 1

commands:
  test-project:
    parameters:
      project:
        type: string
      job_count:
        type: integer
        description: The expected number of jobs.
    steps:
      - run:
          name: Validate orb with <<parameters.project>>
          command: |
            base_api_url="https://circleci.com/api/v1.1/project/github/wunderio/<<parameters.project>>"

            # Trigger a new deployment.
            curl -s -X POST $base_api_url/build?circle-token=$CIRCLECI_DEV_API_TOKEN
            sleep 10

            # Wait for deployment to be complete
            while curl -s "$base_api_url?circle-token=$CIRCLECI_DEV_API_TOKEN&limit=<<parameters.job_count>>" | jq -e 'any(.[]; (.status == "running") or (.status == "queued"))' > /dev/null
            do
              echo "still running"
              sleep 10
            done

            # Test that the build was successful
            curl -s "$base_api_url?circle-token=$CIRCLECI_DEV_API_TOKEN&limit=<<parameters.job_count>>" | jq '.[] | { job_name: .workflows.job_name, status: .status }'
            curl -s "$base_api_url?circle-token=$CIRCLECI_DEV_API_TOKEN&limit=<<parameters.job_count>>" | jq -e 'all(.[]; .status == "success")' > /dev/null

workflows:
  btd:
    jobs:
      - orb-tools/publish:  &publish
          pre-steps:
            - checkout
            - run:
                name: Pack the orb
                command: circleci config pack orb/ > orb.yml

          name: "Publish development orb"
          orb-path: orb.yml
          orb-ref: silta/silta@dev:${CIRCLE_BRANCH}
          publish-token-variable: "$CIRCLECI_DEV_API_TOKEN"
          validate: true

      - orb-tools/publish:
          <<: *publish
          name: "Publish production orb"
          orb-ref: silta/silta@${CIRCLE_TAG}
          filters:
            tags:
              only: /\d+\.\d+\.\d+/
            branches:
              ignore: /.*/

      - validate:
          requires:
            - "Publish development orb"
          filters:
            branches:
              only: master

  weekly-dev-publish:
    triggers:
      - schedule:
          cron: "0 8 * * 1"
          filters:
            branches:
              only:
                - master
    jobs:
      - orb-tools/publish:  &publish
          pre-steps:
            - checkout
            - run:
                name: Pack the orb
                command: circleci config pack orb/ > orb.yml

          name: "Publish development orb"
          orb-path: orb.yml
          orb-ref: silta/silta@dev:${CIRCLE_BRANCH}
          publish-token-variable: "$CIRCLECI_DEV_API_TOKEN"
          validate: true

      - validate:
          requires:
            - "Publish development orb"
          filters:
            branches:
              only: master
