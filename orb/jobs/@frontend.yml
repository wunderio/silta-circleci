frontend-build-deploy:
  description: "Build and deploy frontend chart release."
  executor: <<parameters.executor>>
  parameters:
    executor:
      description: "The name of custom executor to use."
      type: executor
      default: silta
    codebase-build:
      description: "Preparational build steps run after code checkout."
      type: steps
      default: []
    chart_name:
      description: "Helm chart name."
      type: string
      default: frontend
    chart_repository:
      description: "Helm chart repository."
      type: string
      default: https://storage.googleapis.com/charts.wdr.io
    chart_version:
      description: "Deploy specific simple helm chart version."
      type: string
      default: ""
    silta_config:
      description: "Chart values override file. Can have multiple, comma separated values."
      type: string
      default: "silta/silta.yml"
    skip-deployment:
      description: "Skip release deployment."
      type: boolean
      default: false
    cluster_domain:
      description: "Cluster domain value for helm chart. Will be used for default ingress hostnames."
      type: env_var_name
      default: CLUSTER_DOMAIN
    image_build_steps:
      description: "Image build steps."
      type: steps
      default:
      - build-docker-image:
          dockerfile: 'silta/node.Dockerfile'
          path: '.'
          identifier: 'node'
          docker-hash-prefix: v6
    release-suffix:
      description: "Release name suffix."
      type: string
      default: ''
  steps:
    - checkout
    - silta-cli-setup

    - steps: <<parameters.codebase-build>>

    - silta-setup:
        release-suffix: '<<parameters.release-suffix>>'

    - steps: <<parameters.image_build_steps>>

    - unless:
        condition: <<parameters.skip-deployment>>
        steps:

          - helm-cleanup

          - run:
              name: Deploy helm release
              command: |
                NAMESPACE="${CIRCLE_PROJECT_REPONAME,,}"
                BRANCHNAME="${CIRCLE_BRANCH,,}"
                REPOSITORY_URL="${CIRCLE_REPOSITORY_URL}"
                
                image_overrides=""
                for var in `env | grep _IMAGE_IDENTIFIER`; do
                  identifier=`echo $var | cut -f 2 -d "="`
                  image_url="${identifier}_IMAGE_URL"
                  image_overrides="$image_overrides --set services.${identifier}.image=${!image_url}"
                done
                
                silta ci release deploy \
                  --release-name "${RELEASE_NAME}" \
                  --chart-name "<<parameters.chart_name>>" \
                  --chart-repository "<<parameters.chart_repository>>" \
                  --chart-version "<<parameters.chart_version>>" \
                  --silta-environment-name "${SILTA_ENVIRONMENT_NAME}" \
                  --branchname "${BRANCHNAME}" \
                  --repository-url "${REPOSITORY_URL}" \
                  --gitauth-username "${GITAUTH_USERNAME}" \
                  --gitauth-password "${GITAUTH_PASSWORD}" \
                  --cluster-domain "${<<parameters.cluster_domain>>}" \
                  --namespace "${NAMESPACE}" \
                  --db-root-pass "${DB_ROOT_PASS}" \
                  --db-user-pass "${DB_USER_PASS}" \
                  --vpn-ip "${VPN_IP}" \
                  --vpc-native "${VPC_NATIVE}" \
                  --cluster-type "${CLUSTER_TYPE}" \
                  --silta-config "<<parameters.silta_config>>" \
                  --helm-flags "${image_overrides}"

          - helm-release-information
