analyze:
  description: "Drupal code analyze job."
  executor: <<parameters.executor>>
  resource_class: <<parameters.resource_class>>
  parameters:
    executor:
      description: "The name of custom executor to use."
      type: executor
      default: sonar
    resource_class:
      description: "The name of resource class to use."
      type: string
      default: small
    sources:
      description: "Codebase scan paths."
      type: string
      default: "web/modules,web/themes"
  steps:
    - checkout
    - run: >-
        sonar-scanner -Dsonar.host.url="${SONAR_HOST}"
        -Dsonar.token="${SONAR_TOKEN}"
        -Dsonar.projectKey="${CIRCLE_PROJECT_REPONAME,,}"
        -Dsonar.sources='<<parameters.sources>>'

drupal-validate:
  description: "Drupal code validation job."
  executor: <<parameters.executor>>
  resource_class: <<parameters.resource_class>>
  parameters:
    executor:
      description: "The name of custom executor to use."
      type: executor
      default: silta
    resource_class:
      description: "The name of resource class to use."
      type: string
      default: small
    drupal-root:
      description: "Relative path to drupal root"
      type: string
      default: "."
    web-root:
      description: "Relative path to drupal webroot."
      type: string
      default: "web"
    pre-validation:
      description: "Preparational build steps run after code checkout."
      type: steps
      default: []
    post-validation:
      description: "Extra steps to be executed after drupal code validation."
      type: steps
      default: []
  working_directory: ~/project/<<parameters.drupal-root>>
  steps:
    - checkout:
        path: ~/project
    - steps: <<parameters.pre-validation>>
    - drupal-composer-install:
        install-dev-dependencies: true
    - phpcs
    - grumphp
    - steps: <<parameters.post-validation>>

drupal-build-deploy: &drupal-build-deploy
  description: "Build and deploy drupal chart release."
  executor: <<parameters.executor>>
  resource_class: <<parameters.resource_class>>
  parameters: &drupal-build-deploy-params
    executor:
      description: "The name of custom executor to use."
      type: executor
      default: silta
    resource_class:
      description: "The name of resource class to use."
      type: string
      # This job uses Remote Docker Executor, for which medium is the smallest available resource class.
      default: medium
    drupal-root:
      description: "Relative path to drupal root"
      type: string
      default: "."
    codebase-build:
      description: "Preparational build steps run after code checkout."
      type: steps
      default: []
    pre-release:
      description: "Steps to be executed before the Helm release is created."
      type: steps
      default: []
    chart_name:
      description: "Helm chart name."
      type: string
      default: wunderio/drupal
    chart_version:
      description: "Deploy specific drupal helm chart version."
      type: string
      default: "^1.x"
    chart_repository:
      description: "Helm chart repository."
      type: string
      default: ""
    use_dev_chart:
      description: "Internal use only. Used by drupal-build-deploy-dev-charts."
      type: boolean
      default: false
    decrypt_files:
      description: "Encrypted value files. Can have multiple, comma separated values."
      type: string
      default: ""
    silta_config:
      description: "Chart values override file. Can have multiple, comma separated values."
      type: string
      default: "silta/silta.yml"
    skip-deployment:
      description: "Skip release deployment."
      type: boolean
      default: false
    cluster_domain:
      description: "Cluster domain value for helm chart. Will be used for default ingress hostnames."
      type: env_var_name
      default: CLUSTER_DOMAIN
    release-suffix:
      description: "Release name suffix."
      type: string
      default: ''
    deployment_timeout:
      description: "Helm release deployment timeout."
      type: string
      default: "15m"
    nginx_build_context:
      description: "Path to be used as build context for Nginx image build."
      type: string
      default: "web"
    image_build_background:
      type: boolean
      default: true
      description: "Run docker build in background."
    image_build_wait:
      type: boolean
      default: true
      description: "Wait for docker build to finish."
    source_chart:
      description: "Chart to extend"
      type: string
      default: ''
    extension_file:
      description: "Extension config for the source chart"
      type: string
      default: ''
  working_directory: ~/project/<<parameters.drupal-root>>
  steps:
    - checkout:
        path: ~/project
    - silta-cli-setup
    - steps: <<parameters.codebase-build>>
    - unless:
        condition: <<parameters.skip-deployment>>
        steps:
          - when:
                condition: <<parameters.use_dev_chart>>
                steps:
                  - drupal-download-dev-chart
          - when:
              condition: <<parameters.decrypt_files>>
              steps:
                - decrypt-files:
                    files: <<parameters.decrypt_files>>
          - docker-setup
          - silta-setup:
              release-suffix: '<<parameters.release-suffix>>'
          - extend-helm-chart:
              source_chart: '<<parameters.source_chart>>'
              extension_file: '<<parameters.extension_file>>'
              chart_version: '<<parameters.chart_version>>'
          - drupal-values-validate:
              chart_name: <<parameters.chart_name>>
              chart_version: <<parameters.chart_version>>
              chart_repository: <<parameters.chart_repository>>
              silta_config: <<parameters.silta_config>>
          - drupal-docker-build:
              nginx_build_context: <<parameters.nginx_build_context>>
              background: <<parameters.image_build_background>>
              wait: <<parameters.image_build_wait>>
          - steps: <<parameters.pre-release>>
          - drupal-helm-deploy:
              chart_name: <<parameters.chart_name>>
              chart_version: <<parameters.chart_version>>
              chart_repository: <<parameters.chart_repository>>
              silta_config: <<parameters.silta_config>>
              cluster_domain: <<parameters.cluster_domain>>
              deployment_timeout: <<parameters.deployment_timeout>>

# Job to build and deploy using development charts. This extends the
# drupal-build-deploy job and overrides some of the parameters.
drupal-build-deploy-dev-charts:
  <<: *drupal-build-deploy
  description: "Build and deploy using development charts."
  parameters:
    <<: *drupal-build-deploy-params
    use_dev_chart:
      description: "Use development version of the Drupal chart."
      type: boolean
      default: true
    chart_name:
      description: "Helm chart name."
      type: string
      default: "./charts/drupal"
    chart_repository:
      description: "Helm chart repository."
      type: string
      default: ""

drupal-build:
  description: "Build codebase and Docker images for a Drupal release."
  executor: <<parameters.executor>>
  resource_class: <<parameters.resource_class>>
  parameters:
    executor:
      description: "The name of custom executor to use."
      type: executor
      default: silta
    resource_class:
      description: "The name of resource class to use."
      type: string
      # This job uses Remote Docker Executor, for which medium is the smallest available resource class.
      default: medium
    drupal-root:
      description: "Relative path to drupal root"
      type: string
      default: "."
    codebase-build:
      description: "Preparational build steps run after code checkout."
      type: steps
      default: []
    decrypt_files:
      description: "Encrypted value files. Can have multiple, comma separated values."
      type: string
      default: ""
    skip-deployment:
      description: "Skip release deployment."
      type: boolean
      default: false
    release-suffix:
      description: "Release name suffix."
      type: string
      default: ''
    nginx_build_context:
      description: "Path to be used as build context for Nginx image build."
      type: string
      default: "web"
    image_build_background:
      type: boolean
      default: true
      description: "Run docker build in background."
    image_build_wait:
      type: boolean
      default: true
      description: "Wait for docker build to finish."
    silta_cli_version:
      description: "Version of silta-cli to use."
      type: enum
      enum: [ "latest", "test" ]
      default: "latest"
  working_directory: ~/project/<<parameters.drupal-root>>
  steps:
    - checkout:
        path: ~/project
    - silta-cli-setup:
        version: <<parameters.silta_cli_version>>
    - steps: <<parameters.codebase-build>>
    - unless:
        condition: <<parameters.skip-deployment>>
        steps:
          - when:
              condition: <<parameters.decrypt_files>>
              steps:
                - decrypt-files:
                    files: <<parameters.decrypt_files>>
          - docker-setup
          - silta-setup:
              release-suffix: '<<parameters.release-suffix>>'
          - drupal-docker-build:
              nginx_build_context: <<parameters.nginx_build_context>>
              background: <<parameters.image_build_background>>
              wait: <<parameters.image_build_wait>>
          - run:
              name: Store container image URLs to workspace
              command: |
                echo "php_IMAGE_URL='$php_IMAGE_URL'" >> tags
                echo "nginx_IMAGE_URL='$nginx_IMAGE_URL'" >> tags
                echo "shell_IMAGE_URL='$shell_IMAGE_URL'" >> tags
          - persist_to_workspace:
              root: .
              paths:
                - tags

drupal-deploy: &drupal-deploy
  description: "Deploy Drupal chart release."
  executor: <<parameters.executor>>
  resource_class: <<parameters.resource_class>>
  parameters: &drupal-deploy-params
    executor:
      description: "The name of custom executor to use."
      type: executor
      default: silta
    resource_class:
      description: "The name of resource class to use."
      type: string
      default: small
    drupal-root:
      description: "Relative path to drupal root"
      type: string
      default: "."
    pre-release:
      description: "Steps to be executed before the Helm release is created."
      type: steps
      default: []
    chart_name:
      description: "Helm chart name."
      type: string
      default: wunderio/drupal
    chart_version:
      description: "Deploy specific drupal helm chart version."
      type: string
      default: "^1.x"
    chart_repository:
      description: "Helm chart repository."
      type: string
      default: ""
    decrypt_files:
      description: "Encrypted value files. Can have multiple, comma separated values."
      type: string
      default: ""
    silta_config:
      description: "Chart values override file. Can have multiple, comma separated values."
      type: string
      default: "silta/silta.yml"
    skip-deployment:
      description: "Skip release deployment."
      type: boolean
      default: false
    cluster_domain:
      description: "Cluster domain value for helm chart. Will be used for default ingress hostnames."
      type: env_var_name
      default: CLUSTER_DOMAIN
    release-suffix:
      description: "Release name suffix."
      type: string
      default: ''
    deployment_timeout:
      description: "Helm release deployment timeout."
      type: string
      default: "15m"
    source_chart:
      description: "Chart to extend"
      type: string
      default: ''
    extension_file:
      description: "Extension config for the source chart"
      type: string
      default: ''
    use_dev_chart:
      description: "Internal use only. Used by drupal-build-deploy-dev-charts."
      type: boolean
      default: false
    silta_cli_version:
      description: "Version of silta-cli to use."
      type: enum
      enum: ["latest", "test"]
      default: "latest"
  working_directory: ~/project/<<parameters.drupal-root>>
  steps:
    - checkout:
        path: ~/project
    - silta-cli-setup:
        version: <<parameters.silta_cli_version>>
    - unless:
        condition: <<parameters.skip-deployment>>
        steps:
          - when:
              condition: <<parameters.use_dev_chart>>
              steps:
                - drupal-download-dev-chart
          - when:
              condition: <<parameters.decrypt_files>>
              steps:
                - decrypt-files:
                    files: <<parameters.decrypt_files>>
          - silta-setup:
              release-suffix: '<<parameters.release-suffix>>'
          - steps: <<parameters.pre-release>>
          - attach_workspace:
              at: /tmp/workspace
          - run:
              name: Set tags from workspace
              command: |
                source /tmp/workspace/tags
                echo "export php_IMAGE_URL='$php_IMAGE_URL'" >> "$BASH_ENV"
                echo "export nginx_IMAGE_URL='$nginx_IMAGE_URL'" >> "$BASH_ENV"
                echo "export shell_IMAGE_URL='$shell_IMAGE_URL'" >> "$BASH_ENV"
          - extend-helm-chart:
              source_chart: '<<parameters.source_chart>>'
              extension_file: '<<parameters.extension_file>>'
              chart_version: '<<parameters.chart_version>>'
          - drupal-values-validate:
              chart_name: <<parameters.chart_name>>
              chart_version: <<parameters.chart_version>>
              chart_repository: <<parameters.chart_repository>>
              silta_config: <<parameters.silta_config>>
          - drupal-helm-deploy:
              chart_name: <<parameters.chart_name>>
              chart_version: <<parameters.chart_version>>
              chart_repository: <<parameters.chart_repository>>
              silta_config: <<parameters.silta_config>>
              cluster_domain: <<parameters.cluster_domain>>
              deployment_timeout: <<parameters.deployment_timeout>>

# Job to deploy using development charts. This extends the
# drupal-deploy job and overrides some of the parameters.
drupal-deploy-dev-charts:
  <<: *drupal-deploy
  description: "Deploy using development charts."
  parameters:
    <<: *drupal-deploy-params
    use_dev_chart:
      description: "Use development version of the Drupal chart."
      type: boolean
      default: true
    chart_name:
      description: "Helm chart name."
      type: string
      default: "./charts/drupal"
    chart_repository:
      description: "Helm chart repository."
      type: string
      default: ""
